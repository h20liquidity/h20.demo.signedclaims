networks:
  mainnet: 
    rpc: https://1rpc.io/eth
    chain-id: 1 
    currency: ETH
  sepolia:
    rpc: https://1rpc.io/sepolia
    chain-id: 11155111
    currency: ETH

subgraphs:
  mainnet: https://api.thegraph.com/subgraphs/name/h20liquidity/ethereum-0xf1224a48
  sepolia: https://api.goldsky.com/api/public/project_clv14x04y9kzi01saerx7bxpg/subgraphs/ob-sepolia-0xfca89cD1/0.0.2/gn
  
orderbooks:
  mainnet:
    address: 0xf1224A483ad7F1E9aA46A8CE41229F32d7549A74
    network: mainnet
    subgraph: mainnet
  sepolia:
    address: 0xfca89cD12Ba1346b1ac570ed988AB43b812733fe
    network: sepolia
    subgraph: sepolia

deployers:
  mainnet:
    address: 0x56Fa1748867fD547F3cc6C064B809ab84bc7e9B9
    network: mainnet
  sepolia:
    address: 0xd19581a021f4704ad4eBfF68258e7A0a9DB1CD77
    network: sepolia

tokens:
  mainnet-usdt:
    network: mainnet
    address: 0xdAC17F958D2ee523a2206206994597C13D831ec7
    decimals: 6
  mainnet-hot:
    network: mainnet
    address: 0x6c6EE5e31d828De241282B9606C8e98Ea48526E2
    decimals: 18
  sepolia-trot:
    network: sepolia
    address: 0x72bBeF0c3d23C196D324cF7cF59C083760fFae5b
    decimals: 18
  sepolia-noop:
    network: sepolia
    address: 0x555FA2F68dD9B7dB6c8cA1F03bFc317ce61e9028
    decimals: 18

orders:
  mainnet:
    deployer: mainnet
    orderbook: mainnet
    inputs:
      - token: mainnet-usdt
        vault-id: 0xeede83a4244afae4fef82c8f5b97df1f18bfe3193e65ba02052e37f6171b334b
    outputs:
      - token: mainnet-hot
        vault-id: 0xeede83a4244afae4fef82c8f5b97df1f18bfe3193e65ba02052e37f6171b334b
  sepolia:
    deployer: sepolia
    orderbook: sepolia
    inputs:
      - token: sepolia-noop
        vault-id: 0xeede83a4244afae4fef82c8f5b97df1f18bfe3193e65ba02052e37f6171b334b
    outputs:
      - token: sepolia-trot
        vault-id: 0xeede83a4244afae4fef82c8f5b97df1f18bfe3193e65ba02052e37f6171b334b

scenarios:
  mainnet:
    deployer: mainnet
    runs: 10
    bindings:
        orderbook-subparser: 0xFCe5E9F48049f3D8850C2C5fd7AD792F10B36326
        valid-signer: 0x8E72b7568738da52ca3DCd9b24E178127A4E7d37
  sepolia:
    deployer: sepolia
    runs: 10
    bindings:
        orderbook-subparser: 0xe6A589716d5a72276C08E0e08bc941a28005e55A
        valid-signer: 0x8E72b7568738da52ca3DCd9b24E178127A4E7d37

deployments:
  mainnet:
    scenario: mainnet
    order: mainnet
  sepolia:
    scenario: sepolia
    order: sepolia

---

/** 
 *  Our "coupon" (the SignedContext array) will be:
 *  [0] recipient address
 *  [1] amount
 *  [2] expiry timestamp in seconds
 *  Plus some domain separators
 *  [3] order hash
 *  [4] order owner
 *  [5] orderbook address
 *  [6] token address
 *  [7] output vault id
 *  [8] nonce (to prevent replay attacks)
 */ 

#orderbook-subparser !subparser on this network
#valid-signer !the trusted signer of the claims coupon - this would be the Fireblocks wallet

#calculate-io
using-words-from orderbook-subparser

/* do the checks */
:ensure(equal-to(signer<0>() valid-signer) "Wrong signer"),
:ensure(equal-to(signed-context<0 0>() order-counterparty()) "Wrong recipient"),
:ensure(less-than(block-timestamp() signed-context<0 2>()) "Order expired"),
:ensure(equal-to(signed-context<0 3>() order-hash()) "Wrong order hash"),
:ensure(equal-to(signed-context<0 4>() order-owner()) "Wrong order owner"),
:ensure(equal-to(signed-context<0 5>() orderbook()) "Wrong orderbook"),
:ensure(equal-to(signed-context<0 6>() output-token()) "Wrong output token"),
:ensure(equal-to(signed-context<0 7>() output-vault-id()) "Wrong output vault id"),

/* check the nonce has not been used before */
:ensure(is-zero(get(hash(order-hash() signed-context<0 8>()))) "Nonce already used"),
:set(hash(order-hash() signed-context<0 8>()) 1),

output-amount: signed-context<0 1>(),
io-ratio: 0;

#handle-io
:ensure(equal-to(output-vault-balance-decrease() signed-context<0 1>()) "Wrong output amount");